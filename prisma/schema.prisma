datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int    @id @default(autoincrement())
  email        String @unique
  password     String
  birthdate    DateTime?
  first_name   String?
  last_name    String?
  gender       String?  @default("")
  user_name    String?  @default("")
  tasks        Task[]
  createdTasks Task[] @relation("CreatedTasks") 
}

model TaskCategory {
  id    Int    @id @default(autoincrement())
  title String @unique
  tasks Task[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  title String
  color String
  tasks Task[] @relation("TaskTags") 
}

model Task {
  id            Int           @id @default(autoincrement())
  title         String
  description   String?
  hardness      Int?
  priority      Int?
  deadline      String? // Changed from DateTime to String
  isComplete    Boolean      @default(false)
  createdBy     Int
  userId        Int
  taskCategoryId Int?
  parentId      Int? // Self-referential relation for subtasks

  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdByUser User          @relation("CreatedTasks", fields: [createdBy], references: [id], onDelete: Cascade)
  taskCategory  TaskCategory? @relation(fields: [taskCategoryId], references: [id], onDelete: SetNull)
  tags          Tag[]         @relation("TaskTags")
  parentTask    Task?         @relation("TaskSubtasks", fields: [parentId], references: [id], onDelete: Cascade)
  subtasks      Task[]        @relation("TaskSubtasks")
}
